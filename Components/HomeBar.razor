@inject IExperienceService ExperienceService
<div class="full-page">
	<div class="row h-100 align-items-center bg-black bg-gradient p-5">
		<div class="col-md-6">
			<div class="container d-flex justify-content-center">
				<div class="container w-auto">
					<h1 class="text-white ">Ben Davis</h1>
					<Descriptors/>
				</div>
			</div>
		</div>
		<div class="col-md-6">
			<h2 class="text-white">Select Technologies</h2>
			<div class="searchitem-area">
				<div class="row pt-1 gap-1 justify-content-center">
					@foreach (string image in Images.Keys)
					{
						<LogoImage AddSearchItem=AddSearchItem Link=@image Name=@Images[image]/>
					}
				</div>
			</div>
			<h2 class="text-white mt-4">Select Skills</h2>
			<div class="searchitem-area">
				<div class="row gap-3 p-1">
					@foreach (string skill in Skills)
					{
						<div class="col-auto @(SearchItems.Contains(skill) ? "clicked-skill" : "skill") animated-hover pointer p-1 rounded-pill">
							<h4 class="text-black" onclick="@(() => AddSearchItem.InvokeAsync(skill))">@skill</h4>
						</div>
					}
				</div>
			</div>
		</div>
	</div>
</div>

@code {
	[Parameter]
	public List<string> SearchItems { get; set; }
	[Parameter]
	public EventCallback<string> AddSearchItem { get; set; }
	Dictionary<string,string> Images { get; set; } = new() { 
		{"images/java-original-wordmark.svg","Java"},
		{"images/javascript.svg","Javascript" },
		{"images/html-5.svg","HTML" },
		{"images/css-3.svg","CSS" },
		{"images/nodejs-original.svg","Node.js" },
		{"images/react-javascript-js-framework-facebook.svg", "React.js" },
		{"images/python.svg", "Python" },
		{"images/svelte.svg", "Svelte"},
		{"images/tailwind-css.svg", "Tailwind"},
		{"images/postgresql-plain-wordmark.svg","PostgreSQL"},
		{"images/django-original.svg", "Django"},
		{"images/mongodb.svg", "MongoDB"},
		{"images/firebase.svg", "Firebase"},
		{"images/kotlin.svg", "Kotlin"},
		{"images/c++.svg", "C++"}
	};
	List<string> Skills { get; set; } = new();

	protected override async Task OnInitializedAsync()
	{
		Skills = await ExperienceService.GetSkills();
	}
}
