<div class="full-page">
	<div class="row h-100 align-items-center bg-black bg-gradient p-5">
		<div class="col-md-6">
			<div class="container d-flex justify-content-center">
				<div class="container w-auto">
					<h1 class="text-white">Ben Davis</h1>
					<Descriptors/>
				</div>
			</div>
		</div>
		<div class="col-md-6">
			<h2 class="text-white">Search Technologies</h2>
			<div class="technology-area">
				<div class="row pe-5 pt-1 gap-1">
					@foreach (string image in Images.Keys)
					{
						<LogoImage AddSearchItem=AddSearchItem Link=@image Name=@Images[image]/>
					}
				</div>
			</div>
			<h2 class="text-white mt-4">Search Skills</h2>
			<div class="row gap-3 p-1">
				@foreach (string skill in Skills)
				{
					<div class="col-auto @(SearchItems.Contains(skill) ? "clicked" : "") pointer bg-secondary rounded">
						<h4 class="text-black" onclick="@(() => AddSearchItem.InvokeAsync(skill))">@skill</h4>
					</div>
				}
			</div>
		</div>
	</div>
</div>

@code {
	[Parameter]
	public List<string> SearchItems { get; set; }
	[Parameter]
	public EventCallback<string> AddSearchItem { get; set; }
	Dictionary<string,string> Images { get; set; } = new() { 
		{"images/java-original-wordmark.svg","Java"},
		{"images/javascript.svg","Javascript" },
		{"images/nodejs-original.svg","Node.js" },
		{"images/react-javascript-js-framework-facebook.svg", "React.js" },
		{"images/python.svg", "Python" }
	};
	List<string> Skills { get; set; } = new()
	{
		"Teamwork",
		"Leadership",
		"Troubleshooting",
		"Agile"
	};
}
